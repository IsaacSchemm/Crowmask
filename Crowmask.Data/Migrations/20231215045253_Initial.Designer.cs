// <auto-generated />
using System;
using Crowmask.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Crowmask.Data.Migrations
{
    [DbContext(typeof(CrowmaskDbContext))]
    [Migration("20231215045253_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Crowmask.Data.DeleteActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("PublishedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("SubmitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DeleteActivities");
                });

            modelBuilder.Entity("Crowmask.Data.Submission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FriendsOnly")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("PostedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("RatingId")
                        .HasColumnType("int");

                    b.Property<int>("SubmitId")
                        .HasColumnType("int");

                    b.Property<int>("SubtypeId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("Submissions");
                });

            modelBuilder.Entity("Crowmask.Data.SubmissionMedia", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<Guid?>("SubmissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SubmissionId");

                    b.ToTable("SubmissionMedia");
                });

            modelBuilder.Entity("Crowmask.Data.SubmissionTag", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<Guid?>("SubmissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SubmissionId");

                    b.ToTable("SubmissionTag");
                });

            modelBuilder.Entity("Crowmask.Data.UpdateActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("PublishedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("SubmitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UpdateActivities");
                });

            modelBuilder.Entity("Crowmask.Data.SubmissionMedia", b =>
                {
                    b.HasOne("Crowmask.Data.Submission", null)
                        .WithMany("Media")
                        .HasForeignKey("SubmissionId");
                });

            modelBuilder.Entity("Crowmask.Data.SubmissionTag", b =>
                {
                    b.HasOne("Crowmask.Data.Submission", null)
                        .WithMany("Tags")
                        .HasForeignKey("SubmissionId");
                });

            modelBuilder.Entity("Crowmask.Data.Submission", b =>
                {
                    b.Navigation("Media");

                    b.Navigation("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
